# This is the name of the workflow, which will be displayed in the "Actions" tab of your GitHub repository.
name: Deploy to VPS

# This section defines the trigger for the workflow.
# It runs on any push event to the 'main' branch.
on:
  push:
    branches:
      - master  # Change this to 'master' if that's your default branch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  deploy:
    # The type of runner that the job will run on. We use the latest version of Ubuntu.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Step 1: Check out the repository code
      # This action checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Deploy to VPS via SSH
      # This action uses a popular marketplace action to run commands on a remote server.
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}        # The IP address of your VPS from GitHub secrets
          username: ${{ secrets.SSH_USER }}    # The username for your VPS from GitHub secrets
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # The private SSH key from GitHub secrets
          port: 22                             # The SSH port, default is 22
          script: |
            # Navigate to the project directory on the VPS
            cd ~/nextjs-apps/ytpr-edu
            
            # Pull the latest changes from the main branch of your repository
            echo "üöÄ Pulling latest code from GitHub..."
            git pull origin master
            
            # Stop the currently running containers, rebuild the images, and start them in detached mode
            echo "üê≥ Rebuilding and restarting Docker containers..."
            docker-compose down
            docker-compose up -d --build
            
            # Clean up any unused Docker images to save disk space
            echo "üßπ Pruning old Docker images..."
            docker image prune -f
            
            echo "‚úÖ Deployment successful!"
